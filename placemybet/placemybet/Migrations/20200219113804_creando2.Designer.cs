// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using placemybet.Models;

namespace placemybet.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20200219113804_creando2")]
    partial class creando2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("placemybet.Models.apuestas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MercadoID");

                    b.Property<decimal>("apostado");

                    b.Property<string>("correoID");

                    b.Property<decimal>("cuota");

                    b.Property<int>("esOver");

                    b.Property<string>("tipo");

                    b.HasKey("ID");

                    b.HasIndex("MercadoID");

                    b.HasIndex("correoID");

                    b.ToTable("apuestas");
                });

            modelBuilder.Entity("placemybet.Models.cuentas", b =>
                {
                    b.Property<int>("tarjetaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("banco");

                    b.Property<string>("correoID");

                    b.Property<int>("saldo");

                    b.HasKey("tarjetaId");

                    b.HasIndex("correoID");

                    b.ToTable("cuentas");
                });

            modelBuilder.Entity("placemybet.Models.eventos", b =>
                {
                    b.Property<int>("EventosID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("equipoLocal");

                    b.Property<string>("equipoVisitante");

                    b.Property<DateTime>("fecha");

                    b.HasKey("EventosID");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("placemybet.Models.mercados", b =>
                {
                    b.Property<int>("MercadoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventosID");

                    b.Property<decimal>("apostadoOver");

                    b.Property<decimal>("apostadoUnder");

                    b.Property<decimal>("cuotaOver");

                    b.Property<decimal>("cuotaUnder");

                    b.Property<decimal>("tipo");

                    b.HasKey("MercadoID");

                    b.HasIndex("EventosID");

                    b.ToTable("mercados");
                });

            modelBuilder.Entity("placemybet.Models.usuarios", b =>
                {
                    b.Property<string>("correoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apellido");

                    b.Property<int>("edad");

                    b.Property<string>("nombre");

                    b.HasKey("correoID");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("placemybet.Models.apuestas", b =>
                {
                    b.HasOne("placemybet.Models.mercados", "mercado")
                        .WithMany("apuesta")
                        .HasForeignKey("MercadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("placemybet.Models.usuarios", "usuario")
                        .WithMany()
                        .HasForeignKey("correoID");
                });

            modelBuilder.Entity("placemybet.Models.cuentas", b =>
                {
                    b.HasOne("placemybet.Models.usuarios", "usuario")
                        .WithMany("cuentas")
                        .HasForeignKey("correoID");
                });

            modelBuilder.Entity("placemybet.Models.mercados", b =>
                {
                    b.HasOne("placemybet.Models.eventos", "evento")
                        .WithMany("mercado")
                        .HasForeignKey("EventosID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
